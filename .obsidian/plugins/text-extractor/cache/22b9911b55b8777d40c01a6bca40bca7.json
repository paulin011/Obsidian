{"path":"Alte semester/Images/Tag3_01-Web-Security_Printversion.pdf","text":"Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 1 Informationssicherheit und IT-Forensik 3-01 – Web-Security Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 2Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 3Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 4 Grundlagen ▪ Die besondere Bedeutung von Webanwendungen für das heutige Leben erkennen und verstehen, welche Implikationen das für die Security dieser Anwendungen hat ▪ Grobkonzepte und das Prinzip der Parametermanipulation verstehen und erklären können ▪ Die hier gezeigten Angriffe verstehen und selbst anwenden können + Gegenmaßnahmen kennen und implementieren können Lernziele dieser Einheit Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 5 Grundüberlegungen ▪ Writing Secure Code, Second Edition, 0-7356-1722-8 ▪ http://msdn.microsoft.com/en-us/library/ms994921 (Online und als PDF verfügbar, .NET-Security) ▪ Web Security Testing Cookbook ▪ Securing Web Services with WS-Security ▪ XSS Attacks, Syngress ▪ SQL Injection Attacks and Defense ▪ Hacking Exposed Web Applications 3 ▪ Internet-Security aus Software-Sicht ▪ Sichere Webanwendungen Geeignete Literatur Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 6 Grundüberlegungen ▪ „Cross-Site-Scripting-Lücken ohne Ende“ (Heise.de, 16.06.2008) ▪ Zu den über 45.000 auf xssed.com gemeldeten XSS- Lücken gehörten lange Zeit auch etliche zu Verisign, McAfee und Symantec 13-Jahres-Rückblick https://www.tgdaily.com/security-features/50499-youtube-hackers-direct-bieber-fans-to-porn Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 7 Grundüberlegungen ▪ Oktober 2005 ▪ Samy Kamkar, 19, wollte seine Freundin und “hot chicks” beeindrucken ▪ Er wollte möglichst viele Freunde auf MySpace haben... ▪ Innerhalb von 20 Stunden hatten mehr als 1 Millionen Benutzer seinen selbst verbreitenden JavaScript-Wurm aufgerufen ▪ Funktion: − Nachricht auf eigenem Profil “Samy is my hero” − Freundschaftsanfrage an Samy ▪ Noch heute enthalten tausende Profile “Samy is my hero” ▪ MySpace war während des “Angriffs” für einige Zeit down... Der erste große Web-Wurm Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 8 Grundüberlegungen DidYouWatchPorn? 1/2 (mittlerweile offline) Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 9 Grundüberlegungen DidYouWatchPorn? 2/2 (mittlerweile offline) Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 10 Grundüberlegungen ▪ Über 5 Jahre vertrauliche Daten im Document-Root einer deutschen Partnervermittlung/Flirt-Plattform frei abrufbar. ▪ Es handelte sich dabei um Voice-Nachrichten von Flirtsuchenden. ▪ Diese Nachrichten waren eigentlich schon lange nicht mehr aktiv... (Datenschutz) ▪ Damalige Google-Suche: − -inurl:(htm|html|php) intitle:”index of” +”last modified” +”parent directory” +description +size +mp3 +voicefile ▪ Lieferte Tausende Sprachnachrichten im DocumentRoot. Telefon-Flirts einer Dating-Plattform Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 11 Grundüberlegungen ▪ Die hier gezeigte Library ist seit 2011 online (Stand: 2020)! Systematisches Information Disclosure auf Photobucket Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 12 Grundüberlegungen ▪ Webanwendungen auf Anwendungsschicht ▪ Alle anderen IT-Systeme auf darunter liegenden Schichten ▪ Webanwendungen sind damit von Problemen auf allen Schichten betroffen ▪ Web Application Security analog zu Application Security, bezogen auf Internet- und Web-Anwendungen Zusammenhang zwischen Web-Sec und IT-Sec allgemein: Überlick Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 13 Grundüberlegungen Zusammenhang zwischen Web-Sec und IT-Sec allgemein: Abstrakte Sicht auf den Web Technology Stack Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 14 Grobkonzept Web und Grobkonzept Web-Sec Client-Server-Interaktion: Wer hat wo den „Sündenbock“ Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 15 Grobkonzept Web und Grobkonzept Web-Sec Verkettung mehrerer Input/Output-Systeme Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 16 Bewährte Mehrzwecktools kennenlernen und verwenden ▪ Ursprung liegt in „Firebug“ ▪ Funktionen z.B. − Netzwerkanalyse − Zugriff auf das Document Object Model − Zugriff auf JavaScript − Cookies und anderen lokale Speicher − … z.B. Firefox Developer Tools Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 17 Bewährte Mehrzwecktools kennenlernen und verwenden ▪ Monitor live requests ▪ Edit headers on live requests ▪ Cancel live requests ▪ Redirect live requests ▪ https://addons.mozil la.org/de/firefox/add on/tamper-data-for- ff-quantum/ Tamper Data Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 18 Bewährte Mehrzwecktools kennenlernen und verwenden ▪ Web-Proxy ▪ „Repeater“ ▪ Kann auch SSL- /TLS-Man-In-The- Middle ▪ JavaScript Code- Analyse ▪ Kostenfreie Basisversion seit etlichen Jahren verfügbar Burp Suite Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 19 Bewährte Mehrzwecktools kennenlernen und verwenden ▪ Beispiel: quantity=3&price=500 -> quantity=20&price=10 ▪ Beispiel: Header „User-Agent“, Header „Host“, ... ▪ Beispiel: Cookie-Daten (Session!) Parametermanipulation: GET und POST Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 20 Bewährte Mehrzwecktools kennenlernen und verwenden ▪ Beispiel http://www.jsishop.de/ ▪ Achtung: der hier gezeigte Angriff auf Elemente im Warenkorb erfolgt rein client-seitig im Browser und erfolgt daher ohne Manipulation von fremden Daten, ohne Leistungserschleichung innerhalb einer Demo-Plattform. Darüber hinausgehende Angriffe werden hier nicht gezeigt und können illegal sein – insbesondere, wenn es sich um Angriffe auf den Server und den serverseitigen Code handelt! Eine Bestellung im Webshop manipulieren Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 21 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ XSS-Attacken gehören zu den häufigsten Angriffen, lassen sich oft leicht durchführen und werden oft unterschätzt ▪ Laufen im vertrauenswürdigen Kontext der betroffenen Webseite, jedoch nicht im Server sondern im Browser ab ▪ Angreifer übergibt dem Webserver Schadcode (meist JavaScript oder ActiveScript). Webserver übergibt diesen dem Browser oder einer anderen Komponente ▪ Reflektive und Persistente Angriffe Cross-Site-Scripting (XSS): Konzept Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 22 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ Reflektiver Angriff: Ein Präparierter Link wird dem Opfer zugespielt, der Schadcode wird direkt nach Anklicken aktiv. ▪ Servercode: $name = $_GET['name']; print(\"Guten Tag Herr $name\"); ▪ Angreifer: http://seite.de/skript.php?name=<script language=“javascript“>top.location.href('http://www .phishmydata.com');</script> Cross-Site-Scripting (XSS): Reflektiver Angriff Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 23 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ Verschiedene Varianten, um Javascript-Code einzubinden: − <script>alert(„xss“)</script> − <script>myVar=/XSS/; alert(myVar.source)</script> − <s\\0cript>alert('xss')</s\\0cript> − In Bildern (IE): <img src=“javascript:alert('XSS')“> − https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet ▪ URLEncode/URLDecode (Beispiel-Tools): − https://www.urlencoder.org/ − https://gchq.github.io/CyberChef Cross-Site-Scripting (XSS): Reflektiver Angriff Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 24 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ Persistenter Angriff: Schadcode wird z.B. in die DB eingebracht und zu einem späteren Zeitpunkt z.B. im Browser des Administrators aktiv. Z.B. Header-XSS! Angriffe können so bis ins LAN reichen! ▪ Servercode: $browser = $_SERVER['HTTP_USER_AGENT']; $db->new_entry($datum, $browser); ▪ Angreifer: HTML-Header: User-Agent= <script language=“javascript“> top.location.href('admin.php?action=DELETE_ALL'); </script> Cross-Site-Scripting (XSS): Persistenter Angriff Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 25 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ Angriffstechnik „jüngeren“ Datums (1998) ▪ CSRF veranlasst den Browser ohne Wissen des Opfers Aktionen auf einer anderen Webseite durchzuführen ▪ Dazu wird z.B. das zu der anderen Webseite gehörende Session-Cookie im Browser verwendet (Session Riding) ▪ Können, wie auch XSS-Angriffe, bis ins LAN vordringen, wenn Opfer-System im LAN ist und Ziel des Angriffs der LAN- Rechner ist! Cross-Site-Request-Forgery Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 26 Cross-Site-Scripting / CSRF und DOM-Manipulation Cross-Site-Request-Forgery Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 27 Cross-Site-Scripting / CSRF und DOM-Manipulation ▪ Z.B. mit PHP − strip_tags() und htmlentities() − Berücksichtigen Sie bei htmlentities() die Option ENT_QUOTES ▪ CSRF − Opfer-Plattform Nur POST akzeptieren, Sicherheitsabfragen/CAPTCHA, ... − Wirt-Plattform z.B. getimagesize() als erster Schutz (Inhaltsprüfung) Gegenmaßnahmen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 28 SQL-Injection ▪ Ausnutzung einer Sicherheitslücke in der Verbindung einer Applikation zu der dahinter liegenden Datenbank ▪ Mögliche Ziele dabei: − Auslesen von Daten − Verändern von Daten − Löschen von Daten − Ggf. sogar Einschleusen von Schadcode! (SELECT … INTO OUTFILE …) Grundlagen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 29 SQL-Injection ▪ Ungefilterte Weitergabe von Eingabedaten an SQL-Interpreter eröffnen die Möglichkeit eigene SQL-Abfragen zu modellieren − Etwa mit Hilfe des Semikolon ließe sich eine SQL-Abfrage abschließen und dahinter eine neue Abfrage modellieren − Ein WHERE könnte z.B. durch ein OR so manipuliert werden, dass eine andere oder gar jede Bedingung erfüllt wäre ▪ Angreifer suchen dabei gezielt nach anpassbaren Parametern und beobachten das Verhalten der Applikation. ▪ Interessant dabei sind vor allem deskriptive Fehlermeldungen, die von der Datenbank zurückgeben werden! Grundlagen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 30 SQL-Injection $id = $_GET('id'); $result = mysql_query(„SELECT * FROM user WHERE id=$id“); ▪ Eine ID wie etwa 1 OR 1=1 würde in diesem Falle alle user ausgeben, da das zweite Statement der ODER-Verknüpfung immer gültig ist. ▪ Ganz andere Auswirkungen hätte etwa 1; DROP TABLE user;... − Aber: z.B. MySQL bietet per Default keine Multi-Statements Einfaches Beispiel in PHP Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 31 SQL-Injection ▪ $id = $_GET['id']; $query = „SELECT name, adresse FROM user WHERE id = $id“; $result = mysql_query($query); ▪ skript.php?id=4711 OR 1=1 ▪ skript.php?id=3+1 → 3+1=4: mathematische Operation ▪ skript.php?id=4711'3434 → Fehlermeldung? → SQL-Inject, oder Blind SQL Weiteres Beispiel 1/3 Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 32 SQL-Injection ▪ $id = $_GET['id']; $query = „SELECT name, adresse FROM user WHERE id = $id“; $result = mysql_query($query); ▪ skript.php?id=1 AND 2=3 UNION SELECT name, handy FROM user ▪ SELECT name, adresse FROM user WHERE id = 1 AND 2=3 UNION SELECT name, handy FROM user Weiteres Beispiel 2/3 Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 33 SQL-Injection ▪ SELECT name, adresse FROM user WHERE nachname LIKE '$nachname'; ▪ SELECT name, adresse FROM user WHERE nachname LIKE '%' UNION SELECT benchmark(666,MD5('gemein')), null –- ' Weiteres Beispiel 3/3 Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 34 SQL-Injection ▪ Zur Erkennung, ob eine Webseite anfällig ist, dient häufig eine ausgegebene Fehlermeldung der SQL-Abfrage! ▪ Eine „Blind Injection“ hat diesen Vorteil nicht. Allerdings können erfahrene Angreifer anhand von Verhaltensweisen, etwa Ladezeiten, oder durch die Website generierte Fehlermeldungen darauf schließen, ob und wie eine Abfrage ausgeführt wurde oder nicht. Besonderheit: Blind SQL-Injection Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 35 SQL-Injection ▪ Weitere denkbare Angriffe: id=30 or id=31 id=30; drop table entries; id=30; GRANT ... SELECT * FROM auth WHERE Owner_ID=123 or 1=1 ▪ Oder: select * from auth where username = '$username' and password = '$password‘ $username = admin' /* => select * from auth where username = 'admin' /* ... ▪ Einfache Schutzmaßnahmen − z.B. $id = (int)$id Durchführung Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 36 SQL-Injection ▪ Prüfen von Eingabedaten! Etwa durch Filtern oder Escapen von Metazeichen, wie ; oder ' ▪ Effektiver: Prepared Statements. Vorkompillierte/vorbereitete Anweisungen für die Datenbank, die keine direkten Parameter, sondern nur Platzhalter enthalten − Parameter werden vom DBMS zuverlässig geprüft ▪ Zusätzlich Benutzerrechte der Webapplikation einschränken, so dass nur Privilegien vergeben werden, die tatsächlich gebraucht werden. Gegenmaßnahmen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 37 SQL-Injection <?php $stmt = $dbh->prepare(\"SELECT user, password FROM tbl_user WHERE (user=:user)\"); $stmt->bindParam(':user', $user); // eine Zeile abfragen $user = 'Alice'; $stmt->execute(); // eine weitere Zeile mit anderen Werten abfragen $user = 'Bob'; $stmt->execute(); ?> Gegenmaßnahmen – prepared Statements - Beispiel Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 38 Sessions ▪ Hohes Schadenpotential, wenn Session in URL kodiert ist − Link wird per Mail verschickt − Link taucht in Suchmaschinen auf! − Link taucht in einem Serverlog im Referrer auf − => Besser per Cookie übermitteln ▪ Angriff durch XSS-Attacke, Session-Riding durch CSRF ▪ Problem, wenn bei Wechsel von HTTP<->HTTPS keine neue Session generiert wird -> Sniffing Session Hijacking Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 39 Sessions 1. Angreifer baut neue Session auf 2. Angreifer schickt Opfer Link mit Session-ID 3. Opfer verwendet daraufhin diese Session-ID und logged sich ein 4. Angreifer hat ebenfalls die ID und damit den Account übernommen ▪ Abhilfe: − Session-ID neu generieren vor Login − Benutzername/Passwort erneut abfragen vor kritischen Aktionen Session Fixation Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 40 Mail-Header Injection ▪ Mail-Header Injection ist nach wie vor ein gefährliches Thema ▪ In Header-Felder, deren Werte aus User-Eingaben bestehen, werden weitere Header eingeschmuggelt − Beispiel: Cc: und Bcc: oder komplette weitere Mails ▪ Methode: %0A z.B. in „From“-Feld einfügen und dann neuen Header hinzufügen Konzept Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 41 Mail-Header Injection From: gibt@es.nicht\\r\\n To: spam@opfer.de\\r\\n BCC: noch_mehr@opfer.de\\r\\n Subject: Buy cheap Lolex watches\\r\\n Buy genuine Lolex watches here:\\r\\n http://fakewatch.com\\r\\n Only 20$ each!\\r\\n .\\r\\n To: support@unternehmen.de Subject: Supportanfrage ... Beispiel Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 42 File Inclusion <?php $datei = $_GET['datei']; if(isset($datei)) { include(\"content/$datei\"); } else { include(\"default.php\"); } ?> ▪ Ergänzend: Poison Null Byte-Exploit $datei = $_GET['datei']; require_once(\"/var/www/$datei.php\"); Local File Inclusion Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 43 File Inclusion ▪ Möglichkeit, Daten von einem externen Server in die verwundbare Applikation nachzuladen − z.B. mittels erlaubtem allow_url_fopen (PHP) Remote File Inclusion Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 44 File Inclusion ▪ Idealerweise nur White-List-Ansatz (evtl. in der Session eine Zuordnung Schlüssel->Wert: [1] = „/etc/datei“ ▪ $datei = str_replace(chr(0), '', $string); Gegenmaßnahmen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 45 Remote Shell (Beispiel mit PHP) <?php $my_include = $_GET[\"include\"]; include($my_include); ?> Beschreibung für remote dynamisch nachgeladenen Code Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 46 Remote Shell (Beispiel mit PHP) ; Whether to allow the treatment of URLs (like http:// or ftp://) as files. allow_url_fopen = On ; Whether to allow include/require to open URLs (like http:// or ftp://) as files. allow_url_include = On Beschreibung für remote dynamisch nachgeladenen Code Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 47 Remote Shell (Beispiel mit PHP) Beschreibung für zunächst hochgeladenen und dann lokal ausgeführten Code 1. Upload-Funktion einer Webanwendung nutzen z.B. shellcode.php.jpg als Avatar-Bild hochladen 2. Diesen Code dann in einer Local-File-Inclusion-Attacke nutzen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 48 Gegenmaßnahmen Überblick ▪ Schutzbedarf feststellen/festlegen ▪ Low Hanging Fruits ▪ Security by Obscurity ▪ 4-Augen-Prinzip ▪ Genug Zeit, Gründlichkeit ▪ Misstraue jedem Input! ▪ Externe Audits Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 49 Gegenmaßnahmen Überblick ▪ Alles aus dem DocumentRoot rausnehmen, was nicht unbedingt dort sein muss ▪ Frameworks bauen oder fertige Frameworks verwenden (z.B. Symfony oder eins der dutzenden anderen guten und bewährten Frameworks) ▪ MVC-Konzept umsetzen (Model-View-Controller) ▪ Erwartete Inhalte festlegen (int? float? String? XY-Dimension? Datenvolumen? Stringlänge? ArrayCount?) und erzwingen: − White-List-Ansatz − Black-List-Ansatz − Reguläre Ausdrücke − „Heilen“ vs. Stoppen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 50 Gegenmaßnahmen Überblick ▪ Sonderzeichen erkennen und unschädlich machen − HTML-Entities, Entities − UTF-8/UTF-16 − Nullbytes − ; ' # „ - \\n \\r < > … − Non-printable ASCII-Chars ▪ Nicht strippen/entfernen sondern ersetzen (sscriptcript) ▪ Immer korrekte Encodings und MIME-Types setzen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 51 Gegenmaßnahmen Überblick ▪ Nur generische Fehlermeldungen anzeigen (intern jedoch loggen) ▪ Prepared Statements und Stored Procedures (Achtung! Auch dort SQL-Injection-Gefahr) ▪ CSRF-Tokens ▪ Kapselung einzelner Komponenten ▪ Auch intern gegen den Input anderer Komponenten prüfen ▪ Keine vertraulichen Daten unverschlüsselt an extern rausgeben (z.B. Credentials in Cookies nur kryptiert) Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 52 Gegenmaßnahmen Überblick ▪ Missbräuchliche Verwendung verhindern (CAPTCHAs) − (Achtung: gute Systeme verwenden!) ▪ Missbräuchliche Verwendung erkennen und eskalieren (Mehr als X Requests pro Zeiteinheit? Durchschnitszahlen?) ▪ Adobe Flash absichern nicht mehr verwenden ▪ Same Origin Policy berücksichtigen ▪ Auch an den Client denken! Nicht nur die Webanwendung und die DB sind gefährdet. ▪ Sicherheit im kompletten Lebenszyklus berücksichtigen und umsetzen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 53 Gegenmaßnahmen Überblick ▪ Jedem Input misstrauen − Auch Header, Cookies, ALLES kann manipuliert sein ▪ AJAX/XMLHttpRequests: Was passiert, wenn jemand XHRs direkt zur Anwendung schickt? − Auch hier immer und jederzeit dem Input misstrauen ▪ Sichere Hashing-Algorithmen inkl. Salting verwenden ▪ Daten nicht per GET und POST akzeptieren ▪ Schreibende Aktionen eigentlich nur per POST akzeptieren Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 54 Gegenmaßnahmen Überblick ▪ Nicht PHP/JSP/... ist schlecht, sondern die jeweilige Programmierung → Die Verantwortung nicht jemandem anders zuschieben ▪ Auch auf System-Aufrufe achten (dort auch escapen/filtern) ▪ Immer nur so wenig Rechte vergeben, wie möglich und so viele, wie nötig ▪ Nur so wenig Informationen preisgeben, wie möglich und so viele, wie nötig − Keine fortlaufenden IDs, sondern Hashed-IDs − Fehler bei Login? → „Benutzername ODER Passwort falsch“ Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 55 Gegenmaßnahmen Überblick ▪ Das Backend härten! ▪ Auf Code achten, der von Dritten eingebunden wird (<script src=“http://extern“>) ▪ Keine unnötigen Versions- und Bannerinformationen preisgeben ▪ Bei Team-Meetings gemeinsam über Sicherheit und Sicherheitsfragen sprechen Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 56 Gegenmaßnahmen Überblick ▪ Data Provenance ▪ Vor kritischen Aktionen rückfragen und evtl. sogar das Passwort erneut erfragen ▪ Sessions absichern (session_regenerate()) ▪ Zufallszahlen richtig generieren (md5(time()) ist schlecht!) ▪ Bei hochgeladenen Dateien den DateiTYP wirklich überprüfen ▪ Offene Redirects verhindern ▪ Bei Redirects dem Benutzer eine Infoseite anzeigen, wo „die Reise hingeht“ Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 57 Gegenmaßnahmen Web/HTML als wichtiges Thema begreifen ▪ Bei Cookies die Flags „HTTPOnly“ und „Secure“ setzen ▪ Besonders aufpassen bei WYSIWIG-Editoren in Webseiten für User Generated Content ▪ Daran denken, dass HTML/HTTP auch in anderen Kontexten als Web eine Rolle spielen − Kaffeemaschinen − PKW-Navi-HeadUnits − Self-Service-Stationen (z.B. Fahrkartenautomaten) − Backend (Webshop mit angeschlossenem ERP im Backend, ebenfalls als Webanwendung) − … Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 58 Gegenmaßnahmen Allgemeine Design-Ansätze ▪ Welche Daten müssen wirklich gespeichert werden? ▪ Wo sollen die notwendigen Daten gespeichert werden? → evtl. nur verschlüsselt speichern? (an Nutzerpasswort gebunden) ▪ evtl. sogar zwei 2 getrennte Datenbanken, eine nicht über das Web zugreifbar Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 59 Gegenmaßnahmen Traffic mit TLS verschlüsseln (z.B. mit LetsEncrypt) Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 60 Gegenmaßnahmen Perfect Forward Secrecy ▪ Technik, die den Einsatz von kryptographischen Verfahren sicherer macht ▪ Problem: wenn jemand den verwendeten Schlüssel in Erfahrung bringen kann, kann er die damit verschlüsselten Daten entschlüsseln. Dies gilt auch rückwirkend für aufgezeichneten Datenverkehr. ▪ Idee: Schlüsselaustauschprotokolle so erweitern, dass diese zusätzlich zum Langzeitschlüssel (PKI) pro Sitzung einen individuellen Sitzungsschlüssel verwenden und diesen nach der Sitzung wieder „vergessen“ ▪ So kann mitgeschnittener Traffic zukünftig auch dann nicht systematisch entschlüsselt werden, selbst wenn der Langzeitschlüssel dem Angreifer bekannt geworden ist. ▪ Wird z.B. von TLS/openssl unterstützt Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 61 Gegenmaßnahmen HTTP Strict Transport Security (HSTS) ▪ HTTP response header „Strict-Transport-Security“ ▪ Ein Server kann einem Client so mitteilen, dass dieser in Zukunft nur noch per HTTPS Verbindung mit dem Server aufbauen soll (bis der Wert „max-age“ erreicht ist) Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 62 Gegenmaßnahmen Content Security Policy (CSP) ▪ Headerinformationen, die Ressourcen einschränken ▪ Keine Inline-Skripte → Trennung führt zu sauberem, gut wartbarem Code ▪ (X-)Content-Security-Policy: script-src {Domains} Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 63 Gegenmaßnahmen OWASP Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 64 Ein Auftrag an Sie: unser Musterfall ▪ Überarbeiten Sie (als Hausaufgabe) Ihre Planung für die Errichtung einer „smarten“ Einbruchmeldeanlage 2.0 für das Handwerksunternehmen Ihrer Eltern ▪ Beantworten und begründen Sie unter eigenen Annahmen z.B. folgende Fragen: − Ändern Sie Ihre bisherige Planung? − Werden Sie eine Weboberfläche implementieren? Einen Web-Service für Anbindung an andere Dienste? Werden Sie andere, externe Dienste einbinden (z.B. Wettervorhersage)? − Wie wollen Sie Ihre EMA auf Web-Ebene absichern? − Skizzieren Sie mögliche Problemstellen. Wo könnten Probleme lauern? Wiederkehrende, vorlesungs- und übungsbegleitende Übungsaufgabe Informationssicherheit und IT-Forensik | Einheit 3-01 | Dipl.-Wirt.-Inf. Martin Wundram – martin@wundram.de | Inhalte z.T von DigiTrace GmbH bereitgestellt 65 Live-Hack ▪ ACHTUNG: − SQLi ist grundsätzlich bei fremden Systemen illegal! Mittels SQL-Injection einen Login-Schutz umgehen","libVersion":"0.3.2","langs":""}