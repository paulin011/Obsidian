{"path":"Images/Pasted image 20240108164714.png","text":"1. Unit Testing 3. System Testing * each component is tested independently * all components are integrated to the complete + unit may stand for a component or smaller system entities (package, class, method) *_ detects further inconsistencies and unanticipated + tests created by the developers interactions + automation is common (e.g., JUnit) * system is tested against system requirements 2. Integration Testing 4. Acceptance Testing *_ some components are integrated (e.g., into *_ final stage in the testing process before subsystems) and tested together accepted for operational use * detects inconsistencies in interfaces and * system is tested against user requirements and â€˜communication between components with real data * top-down vs. bottom-up integration + performed by (potential) customer -","libVersion":"0.2.4","langs":"deu+eng"}