{"path":"Statistik/Softwaretechnik/Images/Pasted image 20231211112929.png","text":"public static int modulo(int a, int b) { J# if (b < @) { /71 * Computes the remainder of the b *= -1; /72 * Euclidean division of a by b. In } * contrast to the Java version a % h, int m = a; / 3 * the output will always be positive. while (m <@ || m> b) { //4 * Throws ArithmeticException when b is m += (m < @ ? b : -b); //5 * equal to @. } * return m; /16 * @aram a dividend } * @param b divisor != @ — - - * @return remainder r with @ <= r < b TC3: infinite loop for b = 0, missing exception */ compared to JavaDoc public static int modulo(int a, int b) { . . N intm=a%b; TC6: b remains negative as returnm< @ 2 m+ b : m; —Integer.MIN_VALUE == Integer. MIN_VALUE } and the loop condition is fulfilled for any integer o TC7: indicates that m > b in the loop condition shouldbe Passes all tests v fixed tom > b — . e","libVersion":"0.3.1","langs":"deu+eng"}