{"path":"Alte semester/Images/20240215_Do_Uebung_1_Kryptographie.pdf","text":"1 Informationssicherheit und IT-Forensik – Übung – UEB-01 – Kryptographie Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 2 Begrüßung  Mein Name: Phil Knüfer  Lehrbeauftragter des Martin Wundram ;)  Sechster Übungsdurchlauf  Zweite Remote-Iteration → endlich wieder in Präsenz … aber irgendwie auch nicht Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 3 Kurzvorstellung  angestellt bei DigiTrace  Penetrationstests  Sicherheitsberatung  Incident Response  IT-Forensik  IT-Leiter Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 4 Kurzvorstellung  Studium  B.Sc. IT-Sicherheit  M.Sc. IT-Sicherheit  Ruhr-Uni Bochum © RUB, Marquard Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 5 Kurzvorstellung Alexander Neff  Nun B.Sc. Wirtschaftsinformatik  Eingeschrieben im Master IT-Sicherheit an der Ruhr-Uni  Tutor bis auf weiteres selbst voll eingebunden in seiner Klausurphase und daher dieses Jahr nicht für Tutorium verfügbar  Werksstudent und Junior-Pentester bei DigiTrace Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 6 Kontakt und Feedback Fragen?  Gern auch über die Übung hinaus:  zum ITS-Studium  zum Beruf  …  phil.knuefer@rub.de  Discord Feedback?  Weiterhin im Internet: https://feedback.wundram.de Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 7 Bestandsaufnahme  Wie war die Einheit in der Vorlesung?  Viele neue Konzepte?  Alles verstanden? Wie sieht es aus mit:  Historischen Chiffren?  Blockchiffren?  Asymmetrischer Verschlüsselung?  ... Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 8 Rekapitulation  Kryptologie (gr. Kryptós=geheim/verborgen, lógos=Lehre) → die Lehre vom Verborgenen  Kryptographie  Die „Verteidiger“  Design von Chiffren, Protokollen, sichere Implementierung, …  Krypt(o)analyse  Die „Angreifer“  Versuch, die Sicherheitsannahmen, die Kryptographen getroffen haben, zu brechen (oft mit komplexer Mathematik)  Notwendiges Mittel, um Verfahren vertrauen zu können Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 9 Rekapitulation Kerckhoffs‘ Prinzip:  Die Sicherheit eines kryptographischen Verfahrens hängt nur von der Geheimhaltung der Schlüssel ab, nicht von der Geheimhaltung der Algorithmen  Gegenteil: Security by Obscurity Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 10 Rekapitulation: Historische Chiffren  Verschiebechiffren (Caesarchiffre, ROT-13)  Man nimmt den Klartext und „verschiebt“ ihn um eine feste Anzahl von Zeichen (A→C, B→D, C→E, …, Z→B)  Substitutionschiffen  Monoalphabetisch: man verwendet genau ein Klartextalphabet  Polyalphabetisch: abhängig von der Stelle des Zeichens verwendet man ein anders Verschlüsselungsalphabet (Vigenère) Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 11 Substitution: Schlüsselanzahl  Wie viele Schlüssel gibt es bei einer klassischen Verschiebechiffre? Nicht auf der nächsten Folie spicken sondern erstmal selbst überlegen ;)  Wie viele Schlüssel gibt es bei einer monoalphabetischen Substitution? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 12 Substitution: Schlüsselanzahl  Wie viele Schlüssel gibt es bei einer klassischen Verschiebechiffre?  26 → kleiner Schlüsselraum, das kann man schnell durchprobieren („Brute-Force-Angriff“)  Wie viele Schlüssel gibt es bei einer monoalphabetischen Substitution?  26! = ~4*1026 → ~88 bit Entropie Das ist für sich genommen erstmal ein passabler Wert Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 13 Substitution: Praxisbeispiel  Laden Sie den Text „monoalpha.txt“ von winfo.opc0.de herunter  Führen Sie eine Häufigkeitsanalyse auf die enthaltenen Zeichen durch und lösen Sie die Verschlüsselung  z.B. mit Hilfe von  https://www.cryptogram.org/resource-area/solve-a-cipher/  https://www.cryptool.org/de/cto/frequency-analysis (Empfehlung für Smartphones)  und https://de.wikipedia.org/wiki/Buchstabenhäufigkeit Hinweis: Textsprache ist deutsch. Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 14 Rekapitulation: Historische Chiffren  Über die Jahrhunderte gab es noch viele verschiedene weitere Chiffren  Formen von Transpositionen (Reihenfolge von Zeichen nach festem Schema vertauschen) und Substitutionen (Zeichen durch ein anderes ersetzen)  Alle sind zu knacken, manche leichter, andere schwerer Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 15 Rekapitulation: Moderne Chiffren  Anfang des 20. Jahrhunderts: One-Time-Pad  Eine beweisbar sichere Verschlüsselung Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 16 Rekapitulation: One-Time-Pad  Ist XOR allen klar?  Ist allen klar, warum OTP beweisbar sicher ist? Chiffrat: 1111 1101 1101 1101 1010 1111 Schlüssel 1: 1001 0100 1011 1110 1100 0111 Klartext: 0110 1001 0110 0011 0110 1000 → i c h Schlüssel 2: 1000 1010 1011 0100 1101 1101 Klartext: 0111 0111 0110 1001 0111 0010 → w i r Schlüssel 3: 1000 1110 1011 0100 1100 1010 Klartext: 0111 0011 0110 1001 0110 0101 → s i e Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 17 Moderne Chiffren: Stromchiffren  Angelehnt an One-Time-Pad, aber besser zu handhaben  Generierung eines Schlüsselstroms durch CPRNGs (kryptographisch sichere Zufallszahlengeneratoren)  Ausgabe erfolgt bitweise (gut z.B. für Sprachübertragung) Interner Aufbau der Trivium-Chiffre, CC-BY-SA 3.0, Wikipedia-Nutzer Sissssou Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 18 Moderne Chiffren: DES  Sehr wichtiger grundlegender Algorithmus, der jahrelang als Standard verwendet wurde  Gilt heute als nicht mehr sicher  zu kleiner Schlüssel, Brute-Force-Angriffe sind realisierbar  Keine größeren mathematischen Schwächen, deshalb ein gutes Beispiel dafür, wie moderne Blockchiffren aufgebaut sind Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 19 Data Encryption Standard (DES) Exkurs: Das Verfahren im Überblick  Folgende Grafiken basieren auf öffentlich verfügbaren Vorlesungsmaterialien von Christof Paar und Jan Pelzl Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 20 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com  Der gesamte Algorithmus besteht aus 16 Runden + 2 Permutationen (zu Beginn und am Ende)  Jede Runde verwendet einen eigenen Rundenschlüssel, der vom Hauptschlüssel abgeleitet wird (hier nicht betrachtet) Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 21 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com  Der gesamte Algorithmus besteht aus 16 Runden + 2 Permutationen (zu Beginn und am Ende)  Jede Runde verwendet einen eigenen Rundenschlüssel, der vom Hauptschlüssel abgeleitet wird (hier nicht betrachtet) Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 22 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com  In jeder Runde n:  Der bearbeitete Block wird in zwei gleich große Blöcke geteilt (Ln, Rn)  R n bleibt unverändert und wird das neue Ln+1  Ln wird per XOR mit der Ausgabe einer Funktion f verknüpft, die als Eingabe R n und den Rundenschlüssel Kn erhält L n+1 = R n R n+1 = Ln XOR f(Rn, K n) Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 23 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com Die f-Funktion...  … erweitert die Eingabe von 32 auf 48 Stellen  … teilt die 48 Bit in 6er-Blöcke auf und macht je einen Tabellen-Lookup in einer S-Box  … fasst das Ergebnis der Tabellen-Lookups wieder zu einem Bitstring zusammen und permutiert es Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 24 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com Im Detail: Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 25 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com Im Detail: 2 = 310 2 = 210 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 26 Data Encryption Standard (DES) Quelle: Paar/Pelzl, Kryptografie verständlich, www.crypto-textbook.com Im Detail: Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 27 Data Encryption Standard (DES) Im Ergebnis (Ende des Exkurses!):  Jeder Schritt für sich ist vergleichsweise leicht nachvollziehbar  Wir erinnern uns: Konfusion und Diffusion sind benötigt (Shannon)  Konfusion durch Ersetzung von Zeichen (S-Boxen)  Diffusion durch die Permutationen (Anfang, Ende, jede Runde)  S-Boxen sind nicht-linear und verhindern das Aufstellen eines linearen Gleichungssystems, mit dem DES mathematisch berechnet werden könnte Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 28 Moderne Chiffren: AES  „Advanced“ Encryption Standard“  Nachfolger von DES, in einem offenen Prozess gefunden  Unterschiedlich viele Runden, je nachdem wie lang der Schlüssel ist Byte Substitution Shift Rows MixColumn Key Addition S-Boxen Block als Matrix darstellen: Zeilen- und Spalten vertauschen XOR mit geheimem (Runden-)Schlüssel Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 29 Moderne Chiffren: Betriebsmodi  Blockchiffren verschlüsseln nur einen Block  DES: 64bit  AES: 128bit  Betriebsmodi sind ein Weg, um Daten verschlüsseln zu können, die größer sind als ein Block  In der Vorlesung vorgestellt: ECB CFB CTR CBC OFB GCM Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 30 Moderne Chiffren: Betriebsmodi  ECB ist in der Praxis oft problematisch!  Unabhängige Verschlüsselung aller Klartextblöcke → statistische Auffälligkeiten → Austauschbarkeit einzelner Blöcke en:User:Lunkwill/Wikipedia, basierend auf einem Bild von Larry Ewing, lewing@isc.tamu.edu, erstellt mit der Software The Gimp Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 31 Moderne Chiffren: Betriebsmodi  Austauschbarkeit einzelner Blöcke: Überweisung 101: 100€ an KontoNr. 37 Überweisung 999: 002€ an KontoNr. 18 C13 C 14 C 15 C 16 C17C12C 11 C23 C 24 C 25 C 26 C27C22C 21 C23 C 14 C 25 C 26 C27C22C 21 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 32 Mathematische Grundlagen Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 33 Modularithmetik: Grundlagen  Vorgabe: Wir wollen Berechnungen durchführen, die sich in einem bestimmten, geschlossenen Alphabet befinden:  A: {0, 1, …. n-1} Beispiel:  A = {0, 1, 2, 3, 4}  1 + 2 = 3 → 3 ist in A enthalten, kein Problem  2 + 3 = 5 → 5 ist nicht in A enthalten, was tun? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 34 Modularithmetik: Grundlagen Lösung: Modulararithmetik  2 + 3 = 5, 5 mod 5 = 0 → 2 + 3 mod 5 = 0  Technisch gesehen: Division mit Rest durchführen, der Rest ist das gewünschte Ergebnis Weiteres Beispiel:  2 + 3 + 4 + 3 mod 5 = 12 mod 5 = 2 Jeder wendet Modulararithmetik im Alltag an. Wo? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 35 Modularithmetik: Grundlagen  Man kann mit Modulararithmetik nicht nur addieren:  3*3 mod 5 = 9 mod 5 = 4  4 2 mod 5 = 16 mod 5 = 1  Der Rest ist bei Modulararithmetik nicht eindeutig:  4*4 mod 5 = 16 mod 5 = 1  3+3 mod 5 = 6 mod 5 = 1  472311 mod 5 = 1  Zahlen, die den gleichen Rest erzeugen, fasst man zu einer „Restklasse“ zusammen: Restklasse von 2 mod 5 = {…, -8, -3, 2, 7, 12, …}  Wegen Restklassen gilt: 6 + 7 mod 5 = (6 mod 5) + (7 mod 5) mod 5 = 1 + 2 mod 5 = 3 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 36 Modularithmetik: Praxisbeispiel Berechnen Sie (von Hand):  12 mod 9  21 mod 9  2*29 mod 13  -11*72 mod 12  2346718234 mod 100 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 37 Klassische Chiffrierverfahren Verschiebechiffren (Substitution)  Das Verfahren Julius Caesars mathematisch betrachtet  Kryptographische Verfahren wie Substitutionschiffren sind invertierbare Abbildungen  Sie bilden Elemente des Alphabets A auf A oder ein anderes Alphabet B ab  Klartext M: a b c d e f g …  Chiffre C: D E F G H I J …  C = M + 3 mod 26  dabei gilt für die Buchstaben a=0, b=1, ...z=25  Modulus M = |A| Möglichkeiten der Kryptoanalyse: - Alle Verschiebungen durchprobieren - Statistische Auswertung Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 38 Asymmetrische Verschlüsselung  Verschlüsseln  Signieren Alice BobBerechnet Epublic,Bob(M) = C Berechnet D private,Bob(C) = MC Alice BobBerechnet Hash H(M) Dprivate,Alice(H(M)) = S M, S Berechnet H(M) Berechnet E public,Alice(S) = H‘(M) Prüft H(M) = H‘(M) ? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 39 Public-Key-Kryptographie  Wem fällt es schwer, sich vorzustellen, dass so ein Verfahren mathematisch funktionieren kann? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 40 Asymmetrische Verschlüsselung Anschauliches Beispiel:  Verschlüsseln ist, wie Post in einen Briefkasten werfen.  Jeder, der meinen Namen (meinen „öffentlichen“ Schlüssel) kennt, kann dort Post für mich einwerfen  Nur ich kann mit meinem privaten Briefkastenschlüssel die Post dort herausholen und lesen  Briefträger, der den Brief während der Zustellung öffnet und wieder neu verschließt: Kryptoanalytiker! Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 41 Anschauliches Beispiel:  Signieren ist, wie Dinge in einem zugangsbeschränkten Glaskasten aushängen.  Jeder kann dort vorbeikommen und die Nachrichten lesen  Nur die Berechtigten, die über einen Schlüssel für den Glaskasten verfügen, können Nachrichten dort aushängen (z.B. ein Aushang mit Klausurergebnissen) Asymmetrische Verschlüsselung Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 42 Asymmetrische Verschlüsselung  Sicherheit basiert darauf, dass es bestimmte Einwegfunktionen gibt, die man nur sehr aufwändig umkehren kann  z.B.: Faktorisieren von großen Zahlen  Ziel: Primfaktorzerlegung  Problem: es gibt sehr viele Primzahlen (Zwischen 0 und 2 512, also bis zu Zahlen mit maximal 512 Binärstellen, gibt es ca. 3,8*10 151 Primzahlen)  Daraus können wir ein kryptographisches Verfahren bauen! Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 43 Asymmetrische Krypto: RSA  Wähle zwei verschiedene, große Primzahlen (je ca. 1024 Bit) p und q  Berechne N = p*q (Modulus)  Berechne φ(N) = (p-1)*(q-1)  Wähle e mit 1 < e < φ(N), ggT(e, φ(N)) = 1  Berechne d = e-1 mod φ(N)  P=(e,N) ist öffentlicher Schlüssel  S=(d,N) ist privater Schlüssel Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 44 Asymmetrische Krypto: RSA Warum das Ganze?  Wir wollen verschlüsseln mit C= E(M) = Me mod N  Wir wollen entschlüsseln mit M = D(C) = Cd mod N  Damit das funktioniert, muss die Entschlüsselung die Umkehroperation der Rechnung sein  D(C) = Cd mod N = (Me) d mod N = M e*d mod N  Damit das stimmt, muss e*d also = 1 ergeben  Das stimmt per Definition, denn d = e-1 mod φ(N) <=> d*e = 1 mod φ(N) Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 45 Exkurs: Beweis von RSA Warum taucht da auf einmal φ(N) auf!?  Muss euch nicht im Detail interessieren (führt hier zu weit) Wer es trotzdem nachvollziehen möchte:  Euler‘s Theorem: Seien a und N teilerfremd, dann gilt aφ(N) mod N = 1 Das können wir nutzen:  d*e = 1 mod φ(N) → d*e = 1 + t*φ(N) (Restklassen)  M e*d mod N = M 1 + t*φ(N) mod N = M * M t*φ(N) mod N = M * (M φ(N)) t mod N = M * 1t mod N = M Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 46 Asymmetrische Krypto: RSA Ein Zahlenbeispiel Alice: M = 4 C = Me mod N = 4 3 mod 33 = 31 Bob: Wähle p=3, q=11 N = p*q = 33 φ(N) = (p-1)*(q-1) = 2 * 10 = 20 Wähle e = 3 d = e-1 mod φ(N) = 3-1 mod 20 = 7 C d mod N = 317 mod 33 = 4 P=(N,e) = (33,3) C = 31 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 47 RSA: Berechnen von d Wie findet man d = e-1 mod φ(N)?:  Korrekt: erweiterter euklidscher Algorithmus  Würde hier aber zu weit führen  Bei kleinen Zahlen klappt:  e solange mit 1, 2, 3, …, N-1 multiplizieren, bis das Ergebnis == 1 ist Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 48 RSA: Praxisbeispiel Verschlüsseln Sie selbst:  p = 3, q = 5, e = 3, M = 7 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 49 RSA: Berechnen von d Warum ist RSA jetzt überhaupt sicher?  P=(N, e)  d = e-1 mod φ(N)  Ein Angreifer müsste also die Inverse von e bestimmen können  Dazu benötigt er φ(N)=(p-1)*(q-1)  p und q sind zwar Bestandteil von N, aber diese sehr große Zahl lässt sich nicht effizient faktorisieren → Faktorisierungsproblem als Sicherheitsmerkmal Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 50 Diskreter Logarithmus  Eine andere Einwegfunktion ist der diskrete Logarithmus  Klassischer Logarithmus:  2x = 1024 → log2(1024) = x (in diesem Fall 10)  Diskreter Logarithmus:  ax = b mod N → dloga(b) = x → Mit viel Mathematik gilt: x zu berechnen ist sehr schwer, wenn man a, b und N kennt Auch daraus können wir ein kryptographisches Verfahren bauen! Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 51 Diffie-Hellman-Schlüsselaustausch  Wähle eine große Primzahl n, öffentlich bekannt  Wähle eine Zahl g (2 ≤ g ≤ n-2), öffentlich bekannt  Alice wählt a mit 2 ≤ a ≤ n-2, geheim  Bob wählt b mit 2 ≤ b ≤ n-2, geheim  Basierend auf diesen Werten sind beide nun in der Lage, einen geheimen Schlüssel auszutauschen. Warum? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 52 Asymmetrische Krypto: Diffie-Hellman Alice: Wähle a A = g a mod n K A = Ba mod n Bob: Wähle b B = gb mod n KB = Ab mod n A B einigen sich auf n, g KA = KB, denn: Ba mod n = (gb) a mod n = g b*a mod n = ga*b mod = (g a)b mod n = Ab mod n Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 53 Diffie-Hellman: Praxisbeispiel Tauschen Sie einen geheimen Schlüssel aus (ohne Taschenrechner)  n = 29, g=2  Alice wählt a = 5  Bob wählt b = 12 Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 54 Diffie-Hellman: Berechnen von g Warum ist Diffie-Hellman jetzt überhaupt sicher?  Bekannt sind n und g  Übertragen werden ga und gb  Damit ein Angreifer den geheimen Schlüssel bestimmen kann, muss er a oder b berechnen können  Dazu benötigt er dlogg(ga) oder dlogg(gb)  a und b sind zwar Bestandteil der übertragenen Nachrichten, aber der diskrete Logarithmus lässt sich nicht effizient berechnen → Diskreter Logarithmus als Sicherheitsmerkmal Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 55 Diffie-Hellman: Warum ist das toll? Vorteil am DH-Schlüsselaustausch:  beide Parteien bringen eigenes, frisches Schlüsselmaterial ein  d.h. selbst wenn sich Alice und Bob nicht hundertprozentig vertrauen, beeinflussen sie das Ergebnis zu gleichen Teilen Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 56 Public-Key-Kryptographie Elgamal-Verschlüsselung  1985 entwickelt von Taher Elgamal  Baut auf Diffie-Hellman-Verfahren auf  Kann als Verallgemeinerung zur Verschlüsselung beliebiger Nachrichten verwendet werden Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 57 Digitale Signaturen: Grundlagen  Vergleichbar zu einer analogen Unterschrift sichern digitale Signaturen zu, dass der Absender die Daten in genau der vorliegenden Form unterzeichnet hat  Sicherstellung über (asymmetrische) Kryptographie  Frage: Sind digitale Signaturverfahren sicherer als echte Unterschriften, oder umgekehrt? Welche Gefahren drohen? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 58 Digitale Signaturen: Umsetzung  Absender erstellt einen Hashwert der zu signierenden Daten  Second Preimage resistance: Gefälschte Daten mit demselben Hash können kaum realistisch erzeugt werden  Absender signiert diesen Hash mit seinem privaten Schlüssel  Dazu z.B. RSA-Schlüsselpaar  Signatur erfolgt umgekehrt zur Verschlüsselung, damit jeder die Signatur überprüfen kann  Jeder kann mit dem öffentlichen Schlüssel die Signatur „auspacken“ und überprüfen, ob dieser Wert identisch zum Hash der Daten ist Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 59 Digitale Signaturen: Praxisbeispiel  Wir bereiten die VM für die technischen Übungen vor und Laden dazu eine ISO-Datei von Kai-Linux herunter. Woher wissen wir eigentlich, dass wir die richtige Kali-ISO-Datei heruntergeladen haben? Theoretisch könnte uns jemand Schadsoftware untergeschoben haben. Frage: Kann HTTPS uns dabei helfen?  Die Kali-Webseite erklärt uns, wie wir das Problem lösen sollen  https://www.kali.org/docs/introduction/download-official-kali-linux-images/#verifying-your- downloaded-kali-image  Ein Problem bleibt. Welches? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 60 Digitale Signaturen: Vertrauensproblem  Woher können wir den öffentlichen Schlüssel des Kali-Projekts beziehen?  Können wir den irgendwie signiert bekommen?  Henne-Ei-Problem: Woher wissen wir, dass der Schlüssel, mit dem der Schlüssel signiert wurde, korrekt ist?  Lösung: Transitive Sicherheit / Web of Trust  „Martin sagt, er hat einen Entwickler von Kali Linux getroffen, der ihm bestätigt hat, dass der Schlüssel korrekt ist. Ich vertraue Martin, also kann ich dem Schlüssel vertrauen, dem Martin vertraut.“ Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 61 Zertifikate: Vertrauensproblem  Das selbe Problem existiert mit Zertifikaten, z.B. für den verschlüsselten Datenaustausch per HTTPS  Zertifikatshierarchien  Certificate Authority (CA) stellt Zertifikate aus, Webbrowser vertrauen den CAs  Warum? Wer legt das fest? Informationssicherheit und IT-Forensik | Übung 01 - Kryptographie | M.Sc. Phil Knüfer – phil.knuefer@rub.de 62 Zertifikate: Praxisbeispiel  Sehen Sie sich das Zertifikat der Webseite https://uni-koeln.de an  Wie ist die Zertifikatshierarchie?  Welchen Zertifikaten vertraut ihr Firefox?  Einstellungen → Datenschutz und Sicherheit → Zertifikate anzeigen → Zertifizierungsstellen  Würden Sie diesen CAs vertrauen, wenn Sie die Wahl hätten?","libVersion":"0.3.2","langs":""}